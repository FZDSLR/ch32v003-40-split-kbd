/*
 * k_keycode.h
 *
 *  Created on: 2023729
 *      Author: FZDSL
 */

#ifndef KZ_KEYCODE_H_
#define KZ_KEYCODE_H_

#include <stdint.h>

enum keycode_defines {
// Keycodes
    KC_NO = 0x0000,
    KC_TRANSPARENT = 0x0001,
    KC_A = 0x0004,
    KC_B = 0x0005,
    KC_C = 0x0006,
    KC_D = 0x0007,
    KC_E = 0x0008,
    KC_F = 0x0009,
    KC_G = 0x000A,
    KC_H = 0x000B,
    KC_I = 0x000C,
    KC_J = 0x000D,
    KC_K = 0x000E,
    KC_L = 0x000F,
    KC_M = 0x0010,
    KC_N = 0x0011,
    KC_O = 0x0012,
    KC_P = 0x0013,
    KC_Q = 0x0014,
    KC_R = 0x0015,
    KC_S = 0x0016,
    KC_T = 0x0017,
    KC_U = 0x0018,
    KC_V = 0x0019,
    KC_W = 0x001A,
    KC_X = 0x001B,
    KC_Y = 0x001C,
    KC_Z = 0x001D,
    KC_1 = 0x001E,
    KC_2 = 0x001F,
    KC_3 = 0x0020,
    KC_4 = 0x0021,
    KC_5 = 0x0022,
    KC_6 = 0x0023,
    KC_7 = 0x0024,
    KC_8 = 0x0025,
    KC_9 = 0x0026,
    KC_0 = 0x0027,
    KC_ENTER = 0x0028,
    KC_ESCAPE = 0x0029,
    KC_BACKSPACE = 0x002A,
    KC_TAB = 0x002B,
    KC_SPACE = 0x002C,
    KC_MINUS = 0x002D,
    KC_EQUAL = 0x002E,
    KC_LEFT_BRACKET = 0x002F,
    KC_RIGHT_BRACKET = 0x0030,
    KC_BACKSLASH = 0x0031,
    KC_NONUS_HASH = 0x0032,
    KC_SEMICOLON = 0x0033,
    KC_QUOTE = 0x0034,
    KC_GRAVE = 0x0035,
    KC_COMMA = 0x0036,
    KC_DOT = 0x0037,
    KC_SLASH = 0x0038,
    KC_CAPS_LOCK = 0x0039,
    KC_F1 = 0x003A,
    KC_F2 = 0x003B,
    KC_F3 = 0x003C,
    KC_F4 = 0x003D,
    KC_F5 = 0x003E,
    KC_F6 = 0x003F,
    KC_F7 = 0x0040,
    KC_F8 = 0x0041,
    KC_F9 = 0x0042,
    KC_F10 = 0x0043,
    KC_F11 = 0x0044,
    KC_F12 = 0x0045,
    KC_PRINT_SCREEN = 0x0046,
    KC_SCROLL_LOCK = 0x0047,
    KC_PAUSE = 0x0048,
    KC_INSERT = 0x0049,
    KC_HOME = 0x004A,
    KC_PAGE_UP = 0x004B,
    KC_DELETE = 0x004C,
    KC_END = 0x004D,
    KC_PAGE_DOWN = 0x004E,
    KC_RIGHT = 0x004F,
    KC_LEFT = 0x0050,
    KC_DOWN = 0x0051,
    KC_UP = 0x0052,
    KC_NUM_LOCK = 0x0053,
    KC_KP_SLASH = 0x0054,
    KC_KP_ASTERISK = 0x0055,
    KC_KP_MINUS = 0x0056,
    KC_KP_PLUS = 0x0057,
    KC_KP_ENTER = 0x0058,
    KC_KP_1 = 0x0059,
    KC_KP_2 = 0x005A,
    KC_KP_3 = 0x005B,
    KC_KP_4 = 0x005C,
    KC_KP_5 = 0x005D,
    KC_KP_6 = 0x005E,
    KC_KP_7 = 0x005F,
    KC_KP_8 = 0x0060,
    KC_KP_9 = 0x0061,
    KC_KP_0 = 0x0062,
    KC_KP_DOT = 0x0063,
    KC_NONUS_BACKSLASH = 0x0064,
    KC_APPLICATION = 0x0065,
    KC_KB_POWER = 0x0066,
    KC_KP_EQUAL = 0x0067,
    KC_F13 = 0x0068,
    KC_F14 = 0x0069,
    KC_F15 = 0x006A,
    KC_F16 = 0x006B,
    KC_F17 = 0x006C,
    KC_F18 = 0x006D,
    KC_F19 = 0x006E,
    KC_F20 = 0x006F,
    KC_F21 = 0x0070,
    KC_F22 = 0x0071,
    KC_F23 = 0x0072,
    KC_F24 = 0x0073,
    KC_EXECUTE = 0x0074,
    KC_HELP = 0x0075,
    KC_MENU = 0x0076,
    KC_SELECT = 0x0077,
    KC_STOP = 0x0078,
    KC_AGAIN = 0x0079,
    KC_UNDO = 0x007A,
    KC_CUT = 0x007B,
    KC_COPY = 0x007C,
    KC_PASTE = 0x007D,
    KC_FIND = 0x007E,
    KC_KB_MUTE = 0x007F,
    KC_KB_VOLUME_UP = 0x0080,
    KC_KB_VOLUME_DOWN = 0x0081,
    KC_LOCKING_CAPS_LOCK = 0x0082,
    KC_LOCKING_NUM_LOCK = 0x0083,
    KC_LOCKING_SCROLL_LOCK = 0x0084,
    KC_KP_COMMA = 0x0085,
    KC_KP_EQUAL_AS400 = 0x0086,
    KC_INTERNATIONAL_1 = 0x0087,
    KC_INTERNATIONAL_2 = 0x0088,
    KC_INTERNATIONAL_3 = 0x0089,
    KC_INTERNATIONAL_4 = 0x008A,
    KC_INTERNATIONAL_5 = 0x008B,
    KC_INTERNATIONAL_6 = 0x008C,
    KC_INTERNATIONAL_7 = 0x008D,
    KC_INTERNATIONAL_8 = 0x008E,
    KC_INTERNATIONAL_9 = 0x008F,
    KC_LANGUAGE_1 = 0x0090,
    KC_LANGUAGE_2 = 0x0091,
    KC_LANGUAGE_3 = 0x0092,
    KC_LANGUAGE_4 = 0x0093,
    KC_LANGUAGE_5 = 0x0094,
    KC_LANGUAGE_6 = 0x0095,
    KC_LANGUAGE_7 = 0x0096,
    KC_LANGUAGE_8 = 0x0097,
    KC_LANGUAGE_9 = 0x0098,
    KC_ALTERNATE_ERASE = 0x0099,
    KC_SYSTEM_REQUEST = 0x009A,
    KC_CANCEL = 0x009B,
    KC_CLEAR = 0x009C,
    KC_PRIOR = 0x009D,
    KC_RETURN = 0x009E,
    KC_SEPARATOR = 0x009F,
    KC_OUT = 0x00A0,
    KC_OPER = 0x00A1,
    KC_CLEAR_AGAIN = 0x00A2,
    KC_CRSEL = 0x00A3,
    KC_EXSEL = 0x00A4,

    KC_LEFT_CTRL = 0x00E0,
    KC_LEFT_SHIFT = 0x00E1,
    KC_LEFT_ALT = 0x00E2,
    KC_LEFT_GUI = 0x00E3,
    KC_RIGHT_CTRL = 0x00E4,
    KC_RIGHT_SHIFT = 0x00E5,
    KC_RIGHT_ALT = 0x00E6,
    KC_RIGHT_GUI = 0x00E7,

    // Alias
    XXXXXXX    = KC_NO,
    _______    = KC_TRANSPARENT,
    KC_TRNS    = KC_TRANSPARENT,
    KC_ENT     = KC_ENTER,
    KC_ESC     = KC_ESCAPE,
    KC_BSPC    = KC_BACKSPACE,
    KC_SPC     = KC_SPACE,
    KC_MINS    = KC_MINUS,
    KC_EQL     = KC_EQUAL,
    KC_LBRC    = KC_LEFT_BRACKET,
    KC_RBRC    = KC_RIGHT_BRACKET,
    KC_BSLS    = KC_BACKSLASH,
    KC_NUHS    = KC_NONUS_HASH,
    KC_SCLN    = KC_SEMICOLON,
    KC_QUOT    = KC_QUOTE,
    KC_GRV     = KC_GRAVE,
    KC_COMM    = KC_COMMA,
    KC_SLSH    = KC_SLASH,
    KC_CAPS    = KC_CAPS_LOCK,
    KC_PSCR    = KC_PRINT_SCREEN,
    KC_SCRL    = KC_SCROLL_LOCK,
    KC_BRMD    = KC_SCROLL_LOCK,
    KC_PAUS    = KC_PAUSE,
    KC_BRK     = KC_PAUSE,
    KC_BRMU    = KC_PAUSE,
    KC_INS     = KC_INSERT,
    KC_PGUP    = KC_PAGE_UP,
    KC_DEL     = KC_DELETE,
    KC_PGDN    = KC_PAGE_DOWN,
    KC_RGHT    = KC_RIGHT,
    KC_NUM     = KC_NUM_LOCK,
    KC_PSLS    = KC_KP_SLASH,
    KC_PAST    = KC_KP_ASTERISK,
    KC_PMNS    = KC_KP_MINUS,
    KC_PPLS    = KC_KP_PLUS,
    KC_PENT    = KC_KP_ENTER,
    KC_P1      = KC_KP_1,
    KC_P2      = KC_KP_2,
    KC_P3      = KC_KP_3,
    KC_P4      = KC_KP_4,
    KC_P5      = KC_KP_5,
    KC_P6      = KC_KP_6,
    KC_P7      = KC_KP_7,
    KC_P8      = KC_KP_8,
    KC_P9      = KC_KP_9,
    KC_P0      = KC_KP_0,
    KC_PDOT    = KC_KP_DOT,
    KC_NUBS    = KC_NONUS_BACKSLASH,
    KC_APP     = KC_APPLICATION,
    KC_PEQL    = KC_KP_EQUAL,
    KC_EXEC    = KC_EXECUTE,
    KC_SLCT    = KC_SELECT,
    KC_AGIN    = KC_AGAIN,
    KC_PSTE    = KC_PASTE,
    KC_LCAP    = KC_LOCKING_CAPS_LOCK,
    KC_LNUM    = KC_LOCKING_NUM_LOCK,
    KC_LSCR    = KC_LOCKING_SCROLL_LOCK,
    KC_PCMM    = KC_KP_COMMA,
    KC_INT1    = KC_INTERNATIONAL_1,
    KC_INT2    = KC_INTERNATIONAL_2,
    KC_INT3    = KC_INTERNATIONAL_3,
    KC_INT4    = KC_INTERNATIONAL_4,
    KC_INT5    = KC_INTERNATIONAL_5,
    KC_INT6    = KC_INTERNATIONAL_6,
    KC_INT7    = KC_INTERNATIONAL_7,
    KC_INT8    = KC_INTERNATIONAL_8,
    KC_INT9    = KC_INTERNATIONAL_9,
    KC_LNG1    = KC_LANGUAGE_1,
    KC_LNG2    = KC_LANGUAGE_2,
    KC_LNG3    = KC_LANGUAGE_3,
    KC_LNG4    = KC_LANGUAGE_4,
    KC_LNG5    = KC_LANGUAGE_5,
    KC_LNG6    = KC_LANGUAGE_6,
    KC_LNG7    = KC_LANGUAGE_7,
    KC_LNG8    = KC_LANGUAGE_8,
    KC_LNG9    = KC_LANGUAGE_9,
    KC_ERAS    = KC_ALTERNATE_ERASE,
    KC_SYRQ    = KC_SYSTEM_REQUEST,
    KC_CNCL    = KC_CANCEL,
    KC_CLR     = KC_CLEAR,
    KC_PRIR    = KC_PRIOR,
    KC_RETN    = KC_RETURN,
    KC_SEPR    = KC_SEPARATOR,
    KC_CLAG    = KC_CLEAR_AGAIN,
    KC_CRSL    = KC_CRSEL,
    KC_EXSL    = KC_EXSEL,

    KC_LCTL    = KC_LEFT_CTRL,
    KC_LSFT    = KC_LEFT_SHIFT,
    KC_LALT    = KC_LEFT_ALT,
    KC_LOPT    = KC_LEFT_ALT,
    KC_LGUI    = KC_LEFT_GUI,
    KC_LCMD    = KC_LEFT_GUI,
    KC_LWIN    = KC_LEFT_GUI,
    KC_RCTL    = KC_RIGHT_CTRL,
    KC_RSFT    = KC_RIGHT_SHIFT,
    KC_RALT    = KC_RIGHT_ALT,
    KC_ROPT    = KC_RIGHT_ALT,
    KC_ALGR    = KC_RIGHT_ALT,
    KC_RGUI    = KC_RIGHT_GUI,
    KC_RCMD    = KC_RIGHT_GUI,
    KC_RWIN    = KC_RIGHT_GUI,
};

#define KZ_KEYCODE_HIGH(X,Y) (X>>(16-Y))

#define CMD_LAYER_MO 0x09
#define CMD_LAYER_LT 0x0A
#define CMD_LAYER_LM 0x0B
#define CMD_LAYER_TG 0x0C
#define CMD_LAYER_DF 0x0D
#define CMD_LAYER_TO 0x0E

// #define MO(X) (((CMD_LAYER_MO<<4)|(X&0x0F))<<8)
#define MO(X) ((CMD_LAYER_MO<<12)|(X&0xFF))
#define LT(layer, kc) ((((CMD_LAYER_LT<<4)|(layer&0x0F))<<8)|kc)
#define LM(layer, mod) ((((CMD_LAYER_LM<<4)|(layer&0x0F))<<8)|mod)
#define TG(layer) ((CMD_LAYER_TG<<12)|(layer&0xFF))
#define DF(layer) ((CMD_LAYER_DF<<12)|(layer&0xFF))
#define TO(layer) ((CMD_LAYER_TO<<12)|(layer&0xFF))

#define LM_MOD_LCTL (1<<0)
#define LM_MOD_LSFT (1<<1)
#define LM_MOD_LALT (1<<2)
#define LM_MOD_LGUI (1<<3)
#define LM_MOD_RCTL (1<<4)
#define LM_MOD_RSFT (1<<5)
#define LM_MOD_RALT (1<<6)
#define LM_MOD_RGUI (1<<7)

uint16_t k_analyse_keycode(uint16_t keycode,uint8_t laststatus,uint8_t nowstatus);

#endif
